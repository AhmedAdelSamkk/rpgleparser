fixedOpCodes() ::= <<
OP_ADD: [aA][dD][dD];
OP_ADDDUR: OP_ADD [dD][uU][rR];
OP_ALLOC: [aA][lL][lL][oO][cC];
OP_ANDxx: [aA][nN][dD][0-9][0-9];
OP_ANDEQ: [aA][nN][dD][eE][qQ];
OP_ANDNE: [aA][nN][dD][nN][eE];
OP_ANDLE: [aA][nN][dD][lL][eE];
OP_ANDLT: [aA][nN][dD][lL][tT];
OP_ANDGE: [aA][nN][dD][gG][eE];
OP_ANDGT: [aA][nN][dD][gG][tT];
OP_BITOFF: [bB][iI][tT][oO][fF][fF];
OP_BITON: [bB][iI][tT][oO][nN];
OP_CABxx: [cc][aA][bB][0-9][0-9];
OP_CABEQ: [cC][aA][bB][eE][qQ];
OP_CABNE: [cC][aA][bB][nN][eE];
OP_CABLE: [cC][aA][bB][lL][eE];
OP_CABLT: [cC][aA][bB][lL][tT];
OP_CABGE: [cC][aA][bB][gG][eE];
OP_CABGT: [cC][aA][bB][gG][tT];
OP_CALL: [Cc][Aa][Ll][Ll];
OP_CALLB: OP_CALL [bB];
OP_CASEQ: [cC][aA][sS][eE][qQ];
OP_CASNE: [cC][aA][sS][nN][eE];
OP_CASLE: [cC][aA][sS][lL][eE];
OP_CASLT: [cC][aA][sS][lL][tT];
OP_CASGE: [cC][aA][sS][gG][eE];
OP_CASGT: [cC][aA][sS][gG][tT];
OP_CAS: [cC][aA][sS];
OP_CAT: [cC][aA][tT];
//OP_CHAIN: [cC][hH][aA][iI][nN];
OP_CHECK: [cC][hH][eE][cC][kK];
OP_CHECKR: [cC][hH][eE][cC][kK][rR];
//OP_CLEAR: [cC][lL][eE][aA][rR];
//OP_CLOSE: [cC][lL][oO][sS][eE];
//OP_COMMIT: [cC][oO][mM][mM][iI][tT];
OP_COMP: [cC][oO][mM][pP];
//OP_DEALLOC: [dD][eE][aA][lL][lL][oO][cC];
OP_DEFINE: [dD][eE][fF][iI][nN][eE];
//OP_DELETE: [dD][eE][lL][eE][tT][eE];
OP_DIV: [dD][iI][vV];
OP_DO: [dD][oO];
//OP_DOU: [dD][oO][uU];
OP_DOUEQ: [dD][oO][uU][eE][qQ];
OP_DOUNE: [dD][oO][uU][nN][eE];
OP_DOULE: [dD][oO][uU][lL][eE];
OP_DOULT: [dD][oO][uU][lL][tT];
OP_DOUGE: [dD][oO][uU][gG][eE];
OP_DOUGT: [dD][oO][uU][gG][tT];
//OP_DOW: [dD][oO][wW];
OP_DOWEQ: [dD][oO][wW][eE][qQ];
OP_DOWNE: [dD][oO][wW][nN][eE];
OP_DOWLE: [dD][oO][wW][lL][eE];
OP_DOWLT: [dD][oO][wW][lL][tT];
OP_DOWGE: [dD][oO][wW][gG][eE];
OP_DOWGT: [dD][oO][wW][gG][tT];
//OP_DSPLY: [dD][sS][pP][lL][yY];
//OP_DUMP: [dD][uU][mM][pP];
//OP_ELSE: [eE][lL][sS][eE];
//OP_ELSEIF: [eE][lL][sS][eE][iI][fF];
OP_END: [eE][nN][dD];
OP_ENDCS: [eE][nN][dD][cC][sS];
//OP_ENDDO: [eE][nN][dD][dD][oO];
//OP_ENDFOR: [eE][nN][dD][fF][oO][rR];
//OP_ENDIF: [eE][nN][dD][iI][fF];
//OP_ENDMON: [eE][nN][dD][mM][oO][nN];
//OP_ENDSL: [eE][nN][dD][sS][lL];
//OP_ENDSR: [eE][nN][dD][sS][rR];
//OP_EVAL: [eE][vV][aA][lL];
//OP_EVAL-CORR: [eE][vV][aA][lL]'-'[cC][oO][rR][rR];
//OP_EVALR: [eE][vV][aA][lL][rR];
//OP_EXCEPT: [eE][xX][cC][eE][pP][tT];
//OP_EXFMT: [eE][xX][fF][mM][tT];
//OP_EXSR: [eE][xX][sS][rR];
OP_EXTRCT: [eE][xX][tT][rR][cC][tT];
//OP_FEOD: [fF][eE][oO][dD];
//OP_FOR: [fF][oO][rR];
//OP_FORCE: [fF][oO][rR][cC][eE];
OP_GOTO: [gG][oO][tT][oO];
//OP_IF: [iI][fF];
OP_IFEQ: [iI][fF][eE][qQ];
OP_IFNE: [iI][fF][nN][eE];
OP_IFLE: [iI][fF][lL][eE];
OP_IFLT: [iI][fF][lL][tT];
OP_IFGE: [iI][fF][gG][eE];
OP_IFGT: [iI][fF][gG][tT];
//OP_IN: [iI][nN];
//OP_ITER: [iI][tT][eE][rR];
OP_KFLD: [kK][fF][lL][dD];
OP_KLIST: [kK][lL][iI][sS][tT];
//OP_LEAVE: [lL][eE][aA][vV][eE];
//OP_LEAVESR: [lL][eE][aA][vV][eE][sS][rR];
OP_LOOKUP: [lL][oO][oO][kK][uU][pP];
OP_MHHZO: [mM][hH][hH][zZ][oO];
OP_MHLZO: [mM][hH][lL][zZ][oO];
OP_MLHZO: [mM][lL][hH][zZ][oO];
OP_MLLZO: [mM][lL][lL][zZ][oO];
//OP_MONITOR: [mM][oO][nN][iI][tT][oO][rR];
OP_MOVE: [mM][oO][vV][eE];
OP_MOVEA: [mM][oO][vV][eE][aA];
OP_MOVEL: [mM][oO][vV][eE][lL];
OP_MULT: [mM][uU][lL][tT];
OP_MVR: [mM][vV][rR];
//OP_NEXT: [nN][eE][xX][tT];
OP_OCCUR: [oO][cC][cC][uU][rR];
//OP_ON_ERROR: [oO][nN]'-'[eE][rR][rR][oO][rR];
//OP_OPEN: [oO][pP][eE][nN];
OP_OREQ: [oO][rR][eE][qQ];
OP_ORNE: [oO][rR][nN][eE];
OP_ORLE: [oO][rR][lL][eE];
OP_ORLT: [oO][rR][lL][tT];
OP_ORGE: [oO][rR][gG][eE];
OP_ORGT: [oO][rR][gG][tT];
//OP_OTHER: [oO][tT][hH][eE][rR];
//OP_OUT: [oO][uU][tT];
OP_PARM: [pP][aA][rR][mM];
OP_PLIST: [pP][lL][iI][sS][tT];
//OP_POST: [pP][oO][sS][tT];
//OP_READ: [rR][eE][aA][dD];
//OP_READC: [rR][eE][aA][dD][cC];
//OP_READE: [rR][eE][aA][dD][eE];
//OP_READP: [rR][eE][aA][dD][pP];
//OP_READPE: [rR][eE][aA][dD][pP][eE];
OP_REALLOC: [rR][eE][aA][lL][lL][oO][cC];
//OP_REL: [rR][eE][lL];
//OP_RESET: [rR][eE][sS][eE][tT];
//OP_RETURN: [rR][eE][tT][uU][rR][nN];
//OP_ROLBK: [rR][oO][lL][bB][kK];
OP_SCAN: [sS][cC][aA][nN];
//OP_SELECT: [sS][eE][lL][eE][cC][tT];
//OP_SETGT: [sS][eE][tT][gG][tT];
//OP_SETLL: [sS][eE][tT][lL][lL];
OP_SETOFF: [sS][eE][tT][oO][fF][fF];
OP_SETON: [sS][eE][tT][oO][nN];
OP_SHTDN: [sS][hH][tT][dD][nN];
//OP_SORTA: [sS][oO][rR][tT][aA];
OP_SQRT: [sS][qQ][rR][tT];
OP_SUB: [sS][uU][bB];
OP_SUBDUR: [sS][uU][bB][dD][uU][rR];
OP_SUBST: [sS][uU][bB][sS][tT];
OP_TAG: [tT][aA][gG];
//OP_TEST: [tT][eE][sS][tT];
OP_TESTB: [tT][eE][sS][tT][bB];
OP_TESTN: [tT][eE][sS][tT][nN];
OP_TESTZ: [tT][eE][sS][tT][zZ];
OP_TIME: [tT][iI][mM][eE];
//OP_UNLOCK: [uU][nN][lL][oO][cC][kK];
//OP_UPDATE: [uU][pP][dD][aA][tT][eE];
//OP_WHEN: [wW][hH][eE][nN];
OP_WHENEQ: [wW][hH][eE][nN][eE][qQ];
OP_WHENNE: [wW][hH][eE][nN][nN][eE];
OP_WHENLE: [wW][hH][eE][nN][lL][eE];
OP_WHENLT: [wW][hH][eE][nN][lL][tT];
OP_WHENGE: [wW][hH][eE][nN][gG][eE];
OP_WHENGT: [wW][hH][eE][nN][gG][tT];
//OP_WRITE: [wW][rR][iI][tT][eE];
OP_XFOOT: [xX][fF][oO][oO][tT];
OP_XLATE: [xX][lL][aA][tT][eE];
//OP_XML_INTO: [xX][mM][lL]'-'[iI][nN][tT][oO];
//OP_XML_SAX: [xX][mM][lL]'-'[sS][aA][xX];
OP_Z_ADD: [zZ]'-'[aA][dD][dD];
OP_Z_SUB: [zZ]'-'[sS][uU][bB];
>>