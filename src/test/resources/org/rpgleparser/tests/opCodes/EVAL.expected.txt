/*===TOKENS===*/
COMMENT_SPEC_FIXED       <C*>
COMMENTS_TEXT            <0N01Factor1+++++++Opcode(E)+Factor2+++++++Result++++++++Len++D+HiLoEq....                   >
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
SPLAT_ENTRY              <*Entry>
OP_PLIST                 <PList>
CS_BlankFactor           <              >
CS_BlankFactor           <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
BlankIndicator           <  >
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
COMMENT_SPEC_FIXED       < *>
COMMENTS_TEXT            <                                                                                            >
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
CS_BlankFactor           <              >
OP_EVAL                  <EVAL>
ID                       <x>
'='                      <=>
ID                       <y>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
CS_BlankFactor           <              >
OP_EVAL                  <Eval>
ID                       <result>
'='                      <=>
ID                       <fld1>
'+'                      <+>
'('                      <(>
ID                       <fld2>
'-'                      <->
ID                       <fld3>
')'                      <)>
C_FREE_NEWLINE           <
>
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
CS_BlankFactor           <              >
OP_EVAL                  <eval>
'('                      <(>
CS_OperationAndExtender  <H>
')'                      <)>
ID                       <result>
'='                      <=>
ID                       <fld1>
'+'                      <+>
BIF_LEN                  <%len>
'('                      <(>
ID                       <fld4>
')'                      <)>
C_FREE_NEWLINE           <
>
DIRECTIVE                < />
DIR_FREE                 <Free>
EOL                      <
>
OP_EVAL                  <EVAL>
ID                       <x>
'='                      <=>
ID                       <y>
FREE_SEMI                <;>
OP_EVAL                  <eval>
ID                       <result>
'='                      <=>
ID                       <fld1>
'+'                      <+>
'('                      <(>
ID                       <fld2>
'-'                      <->
ID                       <fld3>
')'                      <)>
FREE_SEMI                <;>
OP_EVAL                  <eval>
'('                      <(>
CS_OperationAndExtender  <h>
')'                      <)>
ID                       <result>
'='                      <=>
ID                       <fld1>
'+'                      <+>
BIF_LEN                  <%len>
'('                      <(>
ID                       <fld4>
')'                      <)>
FREE_SEMI                <;>
COMMENTS                 <     //>
COMMENTS_TEXT            < Not dealing with following case yet                                                   >
COMMENTS                 <     //>
COMMENTS_TEXT            <arr(*) = field2 * filed3;                                                              >
ID                       <ptr>
'='                      <=>
BIF_ADDR                 <%addr>
'('                      <(>
ID                       <foeld>
')'                      <)>
FREE_SEMI                <;>
ID                       <fld3>
'+='                     <+=>
NUMBER                   <5>
FREE_SEMI                <;>
ID                       <fld4>
'-='                     <-=>
NUMBER                   <6>
FREE_SEMI                <;>
ID                       <fld7>
'/='                     </=>
NUMBER                   <10>
FREE_SEMI                <;>
ID                       <fld8>
'*='                     <*=>
'('                      <(>
NUMBER                   <20>
'+'                      <+>
NUMBER                   <30>
')'                      <)>
FREE_SEMI                <;>
ID                       <fld9>
'**='                    <**=>
'('                      <(>
NUMBER                   <6>
'+'                      <+>
BIF_LEN                  <%len>
'('                      <(>
ID                       <fleid>
')'                      <)>
')'                      <)>
FREE_SEMI                <;>
ID                       <cust>
'('                      <(>
ID                       <custom>
')'                      <)>
'.'                      <.>
ID                       <account>
'('                      <(>
ID                       <accum>
')'                      <)>
'.'                      <.>
ID                       <balance>
'-='                     <-=>
NUMBER                   <24>
FREE_SEMI                <;>
DIRECTIVE                < />
DIR_ENDFREE              <end-free>
EOL                      <
>
COMMENT_SPEC_FIXED       < *>
COMMENTS_TEXT            <                                                                                            >
CS_FIXED                 <C>
BlankIndicator           <  >
BlankFlag                < >
BlankIndicator           <  >
CS_BlankFactor           <              >
OP_SETON                 <SETON>
CS_BlankFactor           <              >
CS_BlankFactor           <              >
CS_FieldLength           <     >
CS_DecimalPositions      <  >
LastRecordIndicator      <LR>
BlankIndicator           <  >
BlankIndicator           <  >
EOL                      <
>
/*===TREE===*/
(r
  (statement (star_comments C*))
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor (symbolicConstants *Entry))
      (cspec_fixed_standard
        (csPLIST
          PList
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator '  ')
            (resultIndicator '  ')
            (resultIndicator '  ')
            \r\n
          )
        )
      )
    )
  )
  (statement (star_comments ' *'))
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csEVAL
          EVAL
          (c_free
            (expression
              (expression (identifier (free_identifier x)))
              =
              (expression (identifier (free_identifier y)))
            )
          )
          \n
        )
      )
    )
  )
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csEVAL
          Eval
          (c_free
            (expression
              (expression
                (expression (identifier (free_identifier result)))
                =
                (expression (identifier (free_identifier fld1)))
              )
              +
              (expression
                (
                (expression
                  (expression (identifier (free_identifier fld2)))
                  -
                  (expression (identifier (free_identifier fld3)))
                )
                )
              )
            )
          )
          \n
        )
      )
    )
  )
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csEVAL
          eval
          (cs_operationExtender ( H ))
          (c_free
            (expression
              (expression
                (expression (identifier (free_identifier result)))
                =
                (expression (identifier (free_identifier fld1)))
              )
              +
              (expression
                (bif (bif_len %len ( (expression (identifier (free_identifier fld4))) )))
              )
            )
          )
          \n
        )
      )
    )
  )
  (statement (directive ' /' (beginfree_directive Free) \n))
  (statement
    (free
      (baseExpression
        (op
          (op_eval
            EVAL
            (assignmentExpression
              (expression (identifier (free_identifier x)))
              =
              (expression (identifier (free_identifier y)))
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (op
          (op_eval
            eval
            (assignmentExpression
              (expression (identifier (free_identifier result)))
              =
              (expression
                (expression (identifier (free_identifier fld1)))
                +
                (expression
                  (
                  (expression
                    (expression (identifier (free_identifier fld2)))
                    -
                    (expression (identifier (free_identifier fld3)))
                  )
                  )
                )
              )
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (op
          (op_eval
            eval
            (cs_operationExtender ( h ))
            (assignmentExpression
              (expression (identifier (free_identifier result)))
              =
              (expression
                (expression (identifier (free_identifier fld1)))
                +
                (expression
                  (bif (bif_len %len ( (expression (identifier (free_identifier fld4))) )))
                )
              )
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (op
          (op_eval
            (assignmentExpression
              (expression (identifier (free_identifier ptr)))
              =
              (expression
                (bif (bif_addr %addr ( (expression (identifier (free_identifier foeld))) )))
              )
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (expression
          (expression (identifier (free_identifier fld3)))
          (assignmentOperator +=)
          (expression (number 5))
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (expression
          (expression (identifier (free_identifier fld4)))
          (assignmentOperator -=)
          (expression (number 6))
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (expression
          (expression (identifier (free_identifier fld7)))
          (assignmentOperator /=)
          (expression (number 10))
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (expression
          (expression (identifier (free_identifier fld8)))
          (assignmentOperator *=)
          (expression
            (
            (expression (expression (number 20)) + (expression (number 30)))
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (expression
          (expression (identifier (free_identifier fld9)))
          (assignmentOperator **=)
          (expression
            (
            (expression
              (expression (number 6))
              +
              (expression
                (bif (bif_len %len ( (expression (identifier (free_identifier fleid))) )))
              )
            )
            )
          )
        )
      )
      ;
    )
  )
  (statement
    (free
      (baseExpression
        (expression
          (expression
            (identifier
              (multipart_identifier
                (indexed_identifier
                  (free_identifier cust)
                  (
                  (expression (identifier (free_identifier custom)))
                  )
                )
                .
                (indexed_identifier
                  (free_identifier account)
                  (
                  (expression (identifier (free_identifier accum)))
                  )
                )
                .
                (free_identifier balance)
              )
            )
          )
          (assignmentOperator -=)
          (expression (number 24))
        )
      )
      ;
    )
  )
  (statement (directive ' /' (endfree_directive end-free) \n))
  (statement (star_comments ' *'))
  (statement
    (cspec_fixed
      C
      (cs_controlLevel '  ')
      (onOffIndicatorsFlag ' ')
      (cs_indicators '  ')
      (factor '              ')
      (cspec_fixed_standard
        (csSETON
          SETON
          (cspec_fixed_standard_parts
            (factor '              ')
            (resultType '              ')
            '     '
            '  '
            (resultIndicator LR)
            (resultIndicator '  ')
            (resultIndicator '  ')
            \r\n
          )
        )
      )
    )
  )
)
/*======*/